# Generated by Django 4.2.7 on 2023-11-23 12:02

import apps.videos.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video_file",
                    models.FileField(upload_to=apps.videos.models.video_directory_path),
                ),
                ("name", models.CharField(max_length=150)),
                ("description", models.TextField()),
                ("publication_date", models.DateField(auto_now_add=True)),
                (
                    "preview_image",
                    models.ImageField(
                        upload_to=apps.videos.models.preview_directory_path
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dislikes",
                    models.ManyToManyField(
                        related_name="disliked_videos", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        related_name="liked_videos", to=settings.AUTH_USER_MODEL
                    ),
                ),
                ("tags", models.ManyToManyField(to="videos.tag")),
                (
                    "views",
                    models.ManyToManyField(
                        related_name="watched_videos", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("publication_date", models.DateField(auto_now_add=True)),
                ("source_id", models.PositiveIntegerField()),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dislikes",
                    models.ManyToManyField(
                        related_name="disliked_comments", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        related_name="liked_comments", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "source_type",
                    models.ForeignKey(
                        limit_choices_to=models.Q(
                            models.Q(("app_label", "video"), ("model", "Video")),
                            models.Q(("app_label", "video"), ("model", "Comment")),
                            _connector="OR",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
    ]
